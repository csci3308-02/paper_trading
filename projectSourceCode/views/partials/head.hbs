<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{{title}}</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
  <style>
    .logo-img { 
      height: 80px; 
      width: auto; 
      transition: all 0.3s ease; 
    }
    .logo-img:hover { 
      transform: scale(1.05); 
    }
    .market-change-positive { color: #28a745; }
    .market-change-negative { color: #dc3545; }
    .search-container { position: relative; }
    .search-result-item { cursor: pointer; }
    .search-result-item:hover { background-color: #f8f9fa; }
    .timestamp { font-size: 0.8rem; color: #6c757d; }
  </style>
</head>
<body>
  <!-- Combined Navbar: Search / Logo / Login -->
  <div class="container-fluid py-2" style="background-color: var(--background);">
    <div class="row align-items-center">
      <!-- Left: Search -->
      <div class="col-md-4">
        <div class="search-container">
          <form class="d-flex" id="searchForm">
            <div class="input-group">
              <input type="text"
                     id="searchInput"
                     class="form-control form-control-sm"
                     placeholder="Search stocks (e.g. AAPL)"
                     autocomplete="off">
              <button class="btn btn-dark btn-sm" type="submit">
                <i class="bi bi-search"></i>
              </button>
            </div>
          </form>
          <div id="searchResults" class="list-group mt-1"></div>
        </div>
      </div>

      <!-- Center: Logo -->
      <div class="col-md-4 text-center">
        <a href="/" class="d-inline-block">
          <img src="https://i.postimg.cc/DZ3qDfXh/assets-task-01jsgbk8gafpg8811k6hwbzr88-img-1.png"
               alt="Paper Trading App" class="logo-img">
        </a>
      </div>

      <!-- Right: Profile/Login -->
      <div class="col-md-4 text-end">
        {{#if user}}
          <div class="dropdown d-inline-block">
            <button class="btn btn-success dropdown-toggle btn-sm" type="button"
                    data-bs-toggle="dropdown" aria-expanded="false">
              Profile
            </button>
            <ul class="dropdown-menu dropdown-menu-end">
              <!--<li><a class="dropdown-item" href="/portfolio">My Portfolio</a></li>-->
              <li><a class="dropdown-item" href="/settings">Settings</a></li>
              <li>
                <form action="/logout" method="POST">
                  <button type="submit" class="dropdown-item logout-item">Log Out</button>
                </form>
              </li>
            </ul>
          </div>
        {{else}}
          <a href="/login" class="btn btn-primary btn-sm">Log In</a>
        {{/if}}
      </div>
    </div>
  </div>

  <script>
    // Persist search into localStorage, then navigate/reload chart page
    document.getElementById('searchForm').addEventListener('submit', function(e) {
      e.preventDefault();
      const q = document.getElementById('searchInput').value.trim().toUpperCase();
      if (!q) return;
      const KEY = 'myChartsSymbols';
      const arr = JSON.parse(localStorage.getItem(KEY)) || [];
      if (!arr.includes(q)) {
        arr.push(q);
        localStorage.setItem(KEY, JSON.stringify(arr));
      }
      if (window.location.pathname === '/chart') {
        window.location.reload();
      } else {
        window.location.href = '/chart';
      }
    });

    // Live autocomplete/dropdown
    document.addEventListener('DOMContentLoaded', function() {
      const searchInput   = document.getElementById('searchInput');
      const searchResults = document.getElementById('searchResults');
      let searchTimeout;

      searchInput.addEventListener('input', function(e) {
        clearTimeout(searchTimeout);
        const query = e.target.value.trim();
        if (query.length < 2) {
          searchResults.style.display = 'none';
          return;
        }
        searchTimeout = setTimeout(() => fetchSearchResults(query), 300);
      });

      async function fetchSearchResults(query) {
        try {
          searchResults.innerHTML = `
            <div class="list-group-item text-center">
              <div class="spinner-border spinner-border-sm" role="status"></div>
              <span class="ms-2">Searching…</span>
            </div>`;
          searchResults.style.display = 'block';
          const resp = await fetch(`/api/search?query=${encodeURIComponent(query)}`);
          if (!resp.ok) throw new Error(`API error: ${resp.status}`);
          const data = await resp.json();
          if (!data.length) {
            searchResults.innerHTML = `<div class="list-group-item text-muted">No results for “${query}”</div>`;
            return;
          }
          searchResults.innerHTML = data.map(item => `
            <a href="#" class="list-group-item list-group-item-action search-result-item" data-symbol="${item.symbol}">
              <div class="d-flex justify-content-between">
                <div><strong>${item.symbol}</strong>
                  <span class="text-muted ms-2">${item.name || item.symbol}</span>
                </div>
                ${typeof item.price === 'number'
                  ? `<span class="text-primary">$${item.price.toFixed(2)}</span>`
                  : '<span class="text-muted">N/A</span>'}
              </div>
            </a>
          `).join('');
        } catch (err) {
          searchResults.innerHTML = `
            <div class="list-group-item text-danger">
              <i class="bi bi-exclamation-triangle me-2"></i>${err.message}
            </div>`;
        }
      }

      document.addEventListener('click', e => {
        const item = e.target.closest('.search-result-item');
        if (item?.dataset.symbol) {
            e.preventDefault();
            const symbol = item.dataset.symbol.toUpperCase();
            const KEY = 'myChartsSymbols';
            const arr = JSON.parse(localStorage.getItem(KEY)) || [];
            if (!arr.includes(symbol)) {
            arr.push(symbol);
            localStorage.setItem(KEY, JSON.stringify(arr));
            }
            if (window.location.pathname === '/chart') {
            window.location.reload();
            } else {
            window.location.href = '/chart';
            }
            return;
        }

        // hide dropdown if clicked elsewhere
        if (!e.target.closest('.search-container')) {
            searchResults.style.display = 'none';
        }
        });
    });
  </script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
