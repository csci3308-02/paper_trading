<h1>Stock Chart Simulator</h1>

<div class="controls">
<input 
  type="text" 
  id="tickerInput" 
  placeholder="Enter Ticker (e.g., AAPL)" 
  value="{{symbol}}" <!-- Pre-fill if symbol exists -->/>
  <label for="periodSelect">Period:</label>
  <select id="periodSelect">
    <option value="1d">1 Day</option>
    <option value="5d">5 Days</option>
    <option value="1mo">1 Month</option>
    <option value="3mo">3 Months</option>
    <option value="6mo">6 Months</option>
    <option value="1y">1 Year</option>
  </select>

  <label for="intervalSelect">Interval:</label>
  <select id="intervalSelect">
    <option value="1m">1 Minute</option>
    <option value="5m" selected>5 Minutes</option>
    <option value="15m">15 Minutes</option>
    <option value="30m">30 Minutes</option>
    <option value="1h">1 Hour</option>
    <option value="1d">1 Day</option>
  </select>

  <button onclick="simulateChart()">Simulate Chart</button>
  <button onclick="startLiveChart()">Start Live Chart</button>
  <button onclick="chart.resetZoom()">Reset Zoom</button>

</div>

<div id="currentPrice"></div>
<div id="chartDate" style="margin: 10px 0; font-style: italic;"></div>

<div id="chartContainer">
  <canvas id="stockChart" width="1000" height="500"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-zoom@2.0.1/dist/chartjs-plugin-zoom.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/luxon@3/build/global/luxon.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-luxon@1"></script>
<script src="/script.js" defer></script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const tickerInput = document.getElementById('tickerInput');
    const urlParams = new URLSearchParams(window.location.search);
    const symbol = urlParams.get('symbol');

    if (symbol) {
      tickerInput.value = symbol;
      // Optional: Auto-trigger chart load
      setTimeout(() => simulateChart(), 300); 
    }
  });
</script>
